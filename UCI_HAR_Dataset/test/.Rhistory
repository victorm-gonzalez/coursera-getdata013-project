q()
x <- 1
print(x)
x
msg <- "hello world"
msg
x<-2
setwd("E:/__DATOS__/VIC-THOR/rwd")
x <- 1:4
x
x <- 1:40
x
y <- vector()
y
x
x[3] <- 0
x
vector
Inf
attributes(x)
x
setwd("E:/__DATOS__/VIC-THOR/rwd")
z <- c(T, F, 10)
z
z <- true
z <- TRUE
z
m <- matrix(1:7, nrow=2, ncol=3)
m <- matrix(1:3, nrow=2, ncol=3)
m
n <-1:5
n
dim(n) = 10
dim(n) = c(2,10)
con <- url("http://www.jhsph.edu", r)
con <- url("http://www.jhsph.edu", "r")
x <- readLines(con)
x
head(x)
rm()
rm
rm(con)
rm(x)
rm(msg)
myfunction
myfunction()
View(m)
rm(m
)
a <- 1:5
source("code.r")
x
x$foo
x[1]
x[[1]]
x["bar"]
x["foo"]
#this is a comment
R.version.string
install.packages("swirl")
library(swirl)
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 +1000
my_div
x <- 4
class(x)
x<-c(4, TRUE)
x
class(x)
a <- c(4, TRUE)
class(a)
?cbind
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x<-1:4
y<-2:3
x+y
x <- c(3, 5, 1, 10, 12, 6)
x[x<=5] <- 0
x
read.table("hw1_data.csv")
read.csv("hw1_data.csv")
t <- read.csv("hw1_data.csv")
t
t[1]
t[1][1]
t[1,3]
t[1,*]
t[1,]
t[150:153,]
t[47,]
missing <- is.na(t[,1])
missing
missingtrue <- missing[missing==true]
missingtrue <- missing[missing==TRUE]
missingtrue
ok <- t[,1]
ok <- ok[!missingtrue]
ok
ok <- t[,1]
ok
ok <- ok[!missing]
ok
mean(ok)
t$Ozone
tsub <- t[1,4]
tsub <- t[,1:3]
tsub
t1 <- t[,1]
q18 <- subset(t, "Ozone">31 & "Temp">90)
q18
q18 <- subset(t, t[[1]]>31 & t[[4]]>90)
q18
mean(q18[,2])
q19 <- subset(t, t[[5]]=6)
q19 <- subset(t, t[[5]]==6)
q19
mean(q19[,4])
q20 <- subset(t, t[[5]]==5)
max(q20[,1])
q20
x<-4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x <- 1:4
y <- 2
z <- x+y
class(x)
class(z)
z
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
t
R.version.string
find.package("devtools")
install.packages("devtools")
library(devtools)
library(devtools)
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
a <- rnorm(10)
a
b <- runif(10)
b
mean(b)
b <- runif(1000)
mean(b)
lapply(1:4, runif)
c <- runif(1000, 0, 10)
mean(c)
c <- runif(1000, 1, 10)
mean(c)
source('E:/__DATOS__/VIC-THOR/rwd/k-means-clustering-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/k-means-clustering-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/xml-example.R')
?install
install.packages("XML")
source('E:/__DATOS__/VIC-THOR/rwd/xml-example.R')
rootNode
xmlName(rootNode)
names(rootNode)
a <- names(rootNode)
rootNode[[1]]
rootNode[[0]]
rootNode[[1]][[1]]
xpathSapply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xmlValue
source('E:/__DATOS__/VIC-THOR/rwd/xml-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/xml-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/xml-example.R')
scores
doc2 <- htmlTreeParse(fileUrl2, useInternal=TRUE)
scores <- xpathSApply(doc2, "//li[@class='score']", xmlValue)
scores
source('E:/__DATOS__/VIC-THOR/rwd/json-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/json-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/json-example.R')
source('E:/__DATOS__/VIC-THOR/rwd/json-example.R')
names(jsonData)
names(jsonData$owner)
flights <- fread("https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv")
?fread
install.packages("data.table")
flights <- fread("https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv")
library(data.table)
flights <- fread("https://raw.githubusercontent.com/wiki/arunsrinivasan/flights/NYCflights14/flights14.csv")
View(flights)
flights
DT = data.table(ID = c("b","b","b","a","a","c"), a = 1:6, b = 7:12, c=13:18)
DT
ans <- flights[origin == "JFK" & month == 6]
ans
?order
?order()
ans <- flights([order(-dep_time)]
ans <- flights[order(-dep_time)]
ans
ans <- flights[order(-dep_delay)]
ans
ans <- flights[origin="JFK", list(origin, dest)]
ans <- flights[origin=="JFK", list(origin, dest)]
ans
ans <- flights[, (arr_delay + dep_delay) < 0]
ans
ans <- flights[, (arr_delay + dep_delay)]
ans
ans <- flights[, sum(arr_delay + dep_delay)]
ans
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "ss06hid.csv")
DT <- fread("ss06hid.csv")
library(data.table)
DT <- fread("ss06hid.csv")
DT
ans <- DT[VAL>=24]
DT[,FES]
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "2FDATA.gov_NGAP.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "2FDATA.gov_NGAP.xlsx")
install.packages("xlsx")
library(xlsx)
library(rjava)
install.packages("rJava")
library(rJava)
library(xlsx)
ans2 <- read.xlsx("2FDATA.gov_NGAP.xlsx")
ans2 <- read.xlsx("2FDATA.gov_NGAP.xlsx", sheetIndex=1, header=TRUE)
ans2 <- read.xlsx("2FDATA.gov_NGAP.xlsx", sheetIndex=1, header=FALSE)
ans2 <- read.xlsx("q2.xlsx", sheetIndex=1, header=FALSE)
ans2
head(ans2)
ans2 <- read.xlsx("q2.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
ans2
dat <- read.xlsx("q2.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
doc <- xmlTreeParse("getdata_data_restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xpathSApply(rootNode, "//zipcode", xmlValue)
ans3 <- xpathSApply(rootNode, "//zipcode", xmlValue)
class.name(ans3)
className(ans3)
class(ans3)
as.data.frame(table(ans3))
DF <- as.data.frame(table(ans3))
DT <- fread("getdata_data_ss06pid.csv")
library(data.table)
DT <- fread("getdata_data_ss06pid.csv")
DT
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(replicate(1000, sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]  ))
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time(replicate(1000, tapply(DT$pwgtp15,DT$SEX,mean)  ))
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
system.time(replicate(1000, mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)  ))
system.time(replicate(1000, {mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}  ))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX] ))
R.Version()
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
?oauth_app
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
github_token
install.packages("httpuv")
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/github-api.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/q2.R')
install.packages("sqldf")
source('E:/__DATOS__/VIC-THOR/rwd/gcd/q2.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/q2.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/q2.R')
source('E:/__DATOS__/VIC-THOR/rwd/gcd/q2.R')
tmp
tmp1 <- unique(acs$AGEP)
tmp1
sort(tmp1)
?uniquer
?unique
tmp2 = sqldf("select distinct AGEP from acs")
tmp2
library(lattice)
?xyplot
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time)
Diet
BodyWeight
?text
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?splom
?trellis.par.set
?par
?trellis.par.set
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?qplot
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
p <- g + geom("point")
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
?axis
?panel.abline
?points
?panel.abline
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "q1.csv")
data.table(q1.csv)
read.table(q1.csv)
read.table("q1.csv")
obj <- read.table("q1.csv")
View(obj)
obj <- read.table("q1.csv",sep=",")
head(obj)
str(obj)
View(obj)
obj <- read.table("q1.csv",sep=",", header="TRUE)
""
"
)
obj <- read.table("q1.csv",sep=",", header=TRUE)
View(obj)
agricultureLogical <- ifelse(ACR=3 & AGS=6, TRUE, FALSE)
agricultureLogical <- ifelse(ACR==3 & AGS==6, TRUE, FALSE)
agricultureLogical <- ifelse(obj$ACR==3 & obj$AGS==6, TRUE, FALSE)
which(agricultureLogical)
install.packages("jpeg")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", dest="jeff.jpg")
read.jpeg("jeff.jpg", native=TRUE)
jpeg <- readJPEG("jeff.jpg", native=TRUE)
library(jpeg)
jpeg <- readJPEG("jeff.jpg", native=TRUE)
jpeg <- readJPEG("getdata_jeff.jpg", native=TRUE)
?quantile
qua <- quantile(jpeg, c(30, 80))
qua <- quantile(jpeg, c(0.3, 0.8))
qua
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "GDP.csv")
GDP <- read.table("GDP.csv", sep=",")
View(GDP)
GPD <- read.table("gpd_ok.csv", sep=",")
GPD <- read.table("gpd_ok.csv", sep=";")
View(GPD)
GDP <- read.table("gpd_ok.csv", sep=";")
GDP <- read.table("gpd_ok.csv", sep=";", header=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", dest="educational.csv")
edu <- read.table("educational.csv", sep=",", header=TRUE)
edu <- read.csv("educational.csv", sep=",", header=TRUE)
View(edu)
View(GDP)
merged <- merge(GDP, edu, by.x="country", by.y="CountryCode", all=TRUE)
View(merged)
merged[Income.Group=="High income: OECD",2]
merged[merged$Income.Group=="High income: OECD",2]
mean(merged[merged$Income.Group=="High income: OECD",2], rm.na=TRUE)
tmp1 <- merged[merged$Income.Group=="High income: OECD",2]
mean(tmp1)
rm.na(tmp1)
mean(tmp1, na.rm=TRUE)
mean(merged[merged$Income.Group=="High income: nonOECD",2], na.rm=TRUE)
GDP <- read.csv("GDP.csv", sep=",", header=TRUE)
View(GDP)
merged2 <- merge(GDP, edu, by.x="X", by.y="CountryCode", all=TRUE)
View(merged2)
GDP <- read.csv("gpd_ok.csv", sep=";", header=TRUE)
View(GDP)
merged <- merge(GDP, edu, by.x="country", by.y="CountryCode", all=TRUE)
View(merged)
merged <- merge(GDP, edu, by.x="country", by.y="CountryCode", all=FALSE)
View(merged)
mean(merged[merged$Income.Group=="High income: nonOECD",2], na.rm=TRUE)
GDP <- read.csv("gpd_ok.csv", sep=";", header=TRUE)
View(GDP)
?read.csv
GDP <- read.csv("gpd_ok.csv", sep=";", quote="\"" header=TRUE)
GDP <- read.csv("gpd_ok.csv", sep=";", quote="\"", header=TRUE)
View(GDP)
GDP <- read.csv("GDP.csv", sep=";", quote="\"", header=TRUE)
View(GDP)
GDP <- read.csv("GDP.csv", sep=",", quote="\"", header=TRUE)
View(GDP)
merged <- merge(GDP, edu, by.x="country", by.y="CountryCode", all=FALSE)
merged <- merge(GDP, edu, by.x="X", by.y="CountryCode", all=FALSE)
View(merged)
mean(merged[merged$Income.Group=="High income: nonOECD",2], na.rm=TRUE)
merged[merged$Income.Group=="High income: nonOECD",2]
GDP <- read.csv("gpd_ok.csv", sep=";", quote="\"", header=TRUE)
View(GDP)
merged <- merge(GDP, edu, by.x="country", by.y="CountryCode", all=FALSE)
View(merged)
merged <- merge(na.rm(GDP), edu, by.x="country", by.y="CountryCode", all=FALSE)
merged <- merge(GDP[na.rm,], edu, by.x="country", by.y="CountryCode", all=FALSE)
merged <- merge(subset(GDP, !is.na), edu, by.x="country", by.y="CountryCode", all=FALSE)
merged <- merge(subset(GDP, !is.na(GDP$ranking)), edu, by.x="country", by.y="CountryCode", all=FALSE)
subset(GDP, !is.na(GDP$Ranking))
merged <- merge(subset(GDP, !is.na(GDP$Ranking)), edu, by.x="country", by.y="CountryCode", all=FALSE)
View(merged)
View(edu)
GDP2 <- read.csv("gpd_ok2.csv", sep=",", header=TRUE)
GDP2 <- read.csv("gdp_ok2.csv", sep=",", header=TRUE)
GDP2 <- read.csv("gpd_ok2.csv", sep=",", header=TRUE, quote="\"")
GDP2 <- read.csv("gdp_ok2.csv", sep=",", header=TRUE, quote="\"")
View(GDP2)
GDP2 <- read.csv("gdp_ok2.csv", sep=",", header=TRUE, quote="\"")
merged <- merge(subset(GDP2, !is.na(GDP$Ranking)), edu, by.x="country", by.y="CountryCode", all=FALSE)
View(merged)
mean(merged[merged$Income.Group=="High income: nonOECD",2], na.rm=TRUE)
mean(merged[merged$Income.Group=="High income: OECD",2], na.rm=TRUE)
merged_sort <- sort(merged, merged$Ranking)
?sort
submerged <- subset(merged, merged$Ranking<=38)
View(submerged)
submerged2 <- subset(submerged, Income.Group=="Lower middle income")
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
setwd("E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/UCI HAR Dataset/test")
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
source('E:/__DATOS__/VIC-THOR/git-repos/coursera-getdata013-project/run_analysis.R')
